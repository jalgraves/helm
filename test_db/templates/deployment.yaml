apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "test-db.fullname" . }}
  labels:
    {{- include "test-db.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "test-db.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "test-db.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "test-db.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: pg-auth
          - name: POSTGRES_HOST_AUTH_METHOD
            valueFrom:
              secretKeyRef:
                key: method
                name: pg-auth
          name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5432
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: db-bootstrap
            mountPath: /docker-entrypoint-initdb.d/
      volumes:
      - name: db-bootstrap
        configMap:
          name: db-bootstrap
          items:
          - key: pg_user.sh
            path: init-user-db.sh
